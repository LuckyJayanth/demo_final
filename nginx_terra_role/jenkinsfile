pipeline {
    environment {
        AWS_ACCESS_KEY = credentials('AWS_ACCESS_KEY')
        AWS_SECRET_KEY = credentials('AWS_SECRET_KEY')
    }

    agent any

    stages {
       stage('Clean Workspace') {
            steps {
                cleanWs()
             }
        }
        stage('Checkout') {
            steps {
                script {
                    dir("terraform") {
                        git branch: 'main', credentialsId: 'git_tocken', url: 'https://github.com/LuckyJayanth/demo_final.git'
                        sh 'chmod +x /var/lib/jenkins/workspace/demo_final/terraform/nginx_terra_role/ROOT_MODULE'
                    }
                }
            }
        }

        stage('terraform init') {
            steps {
                sh 'pwd;cd terraform/nginx_terra_role/ROOT_MODULE ; terraform init'
            }
        }

        stage('terraform Action') {
            steps {
                echo "Terraform action is â€“> ${action}"
        
                script {
                    // Check the value of ${action} and execute the appropriate Terraform command
                    if (action == 'plan') {
                        sh "cd terraform/nginx_terra_role/ROOT_MODULE && terraform plan -out tfplan"
                    } else if (action == 'apply') {
                        sh "cd terraform/nginx_terra_role/ROOT_MODULE && terraform apply -auto-approve -lock=false"
                    } else if (action == 'destroy') {
                        sh "cd terraform/nginx_terra_role/ROOT_MODULE && terraform destroy -auto-approve -lock=false"
                    } else {
                        error "Invalid action: ${action}. Supported actions are 'plan', 'apply', and 'destroy'."
                    }
                }
            }
        }
    }
}
